#pragma config(Sensor, dgtl1,  bFloor1,        sensorTouch)
#pragma config(Sensor, dgtl2,  bFloor2,        sensorTouch)
#pragma config(Sensor, dgtl3,  bFloor3,        sensorTouch)
#pragma config(Sensor, dgtl4,  pFloor1,        sensorTouch)
#pragma config(Sensor, dgtl5,  pFloor2,        sensorTouch)
#pragma config(Sensor, dgtl6,  pFloor3,        sensorTouch)
#pragma config(Sensor, dgtl7,  eFloor1,        sensorTouch)
#pragma config(Sensor, dgtl8,  eFloor2,        sensorTouch)
#pragma config(Sensor, dgtl9,  eFloor3,        sensorTouch)
#pragma config(Sensor, dgtl10, LED1,           sensorLEDtoVCC)
#pragma config(Sensor, dgtl11, LED2,           sensorLEDtoVCC)
#pragma config(Sensor, dgtl12, LED3,           sensorLEDtoVCC)
#pragma config(Motor,  port2,           mainMotor,     tmotorVex393_MC29, openLoop)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//

//function declarations look under task main for definition
int getpFloor();
int geteFloor();
int getbFloor();
void TurnOnLED(int currentpFloor);
void TurnOffLED(int currentpFloor);
void motorsUp(int advancepFloor);
void motorsDown(int advancepFloor);

															//int main()		//if system crashes after running for a few minutes.
															//{
															//	task main  //change to mainloop();
															//}

task main()  									//change line to void mainloop() like void motors
{
	//declare local variables in task main
	int currentpFloor = 0;
	int currenteFloor = 0;
	int currentbFloor = 0;
	int buttonPressSearch = 0;
	int floorSearch = 0;
	int ledActivation = 0;

	//infinity loop
	while (1 == 1)
	{
		//reset initial variable values to 0.
		currentpFloor = 0;
		currenteFloor = 0;
		currentbFloor = 0;
		buttonPressSearch = 0;
		floorSearch = 0;
		ledActivation = 0;

		//wait for button to be pressed from floor or elevator
		while (buttonPressSearch == 0)
		{
			currenteFloor = geteFloor();
			currentbFloor = getbFloor();
			if (currenteFloor != currentbFloor)				// != is does not equal if problem use brackets <>
			{
				buttonPressSearch = 1;
				//TurnOffLED(getpFloor());
				ledActivation = getpFloor();
				TurnOffLED(ledActivation);
			}
		}

		//get the current position of the elevator
		while (floorSearch == 0)
		{
			currentpFloor = getpFloor();
			if (currentpFloor != 0)
				floorSearch = 1;
		}

		//see if elevator needs to move up or down from current position
		//if (((currentbFloor == currentpFloor) || (currenteFloor == currentpFloor))
				//do nothing because button is pressed for floor elevator is already on.
		if ((currentbFloor > currentpFloor) || (currenteFloor > currentpFloor))
				if (currentbFloor != 0)
						motorsUp(currentbFloor);
				else
						motorsUp(currenteFloor);
		if ((currentbFloor < currentpFloor) || (currenteFloor < currentpFloor))
				if (currentbFloor != 0)
						motorsDown(currentbFloor);
				else
						motorsDown(currenteFloor);

		//turn on led after elevator moves to new postion
		//TurnOnLED(getpFloor());
		ledActivation = getpFloor();
		TurnOnLED(ledActivation);
	}
}

//function returns the current location of the elevator
int getpFloor()
{
		int currentpFloor;

		if (SensorValue(pFloor1)==true)
			currentpFloor = 1;
		else if (SensorValue(pFloor2)==true)
			currentpFloor = 2;
		else if (SensorValue(pFloor3)==true)
			currentpFloor = 3;
		else currentpFloor = 0;

		return(currentpFloor);
}

//function returns the elavator button pushed
int geteFloor()
{
	int currenteFloor;

		if (SensorValue(eFloor1)==true)
			currenteFloor = 1;
		else if (SensorValue(eFloor2)==true)
			currenteFloor = 2;
		else if (SensorValue(eFloor3)==true)
			currenteFloor = 3;

		else currenteFloor = 0;
		return(currenteFloor);
}

//function returns the floor button pushed
int getbFloor()
{
	int currentbFloor;

		if (SensorValue(bFloor1)==true)
			currentbFloor = 1;
		else if (SensorValue(bFloor2)==true)
			currentbFloor = 2;
		else if (SensorValue(bFloor3)==true)
			currentbFloor = 3;

		else currentbFloor = 0;
		return(currentbFloor);
}

//Turns on the LED based on elevator position
void TurnOnLED(int currentpFloor)
{
	if (currentpFloor == 1)
		SensorValue[LED1] = 1;
	if (currentpFloor == 2)
		SensorValue[LED2] = 1;
	if (currentpFloor == 3)
		SensorValue[LED3] = 1;
}

//Turns off the LED based on elevator position
void TurnOffLED(int currentpFloor)
{
	if (currentpFloor == 1)
		SensorValue[LED1] = 0;
	if (currentpFloor == 2)
		SensorValue[LED2] = 0;
	if (currentpFloor == 3)
		SensorValue[LED3] = 0;
}

//Makes motor move elevator UP
void motorsUp(int advancepFloor)
{
	startMotor(mainMotor, 60);
 	if (advancepFloor == 1)
 		untilTouch(pFloor1);
 	else if (advancepFloor == 2)
 		untilTouch(pFloor2);
 	else if (advancepFloor == 3)
 		untilTouch(pFloor3);
  stopMotor(mainMotor);

}

//Makes motor move elevator DOWN
void motorsDown(int advancepFloor)
{
	startMotor(mainMotor, -60);
 	if (advancepFloor == 1)
 		untilTouch(pFloor1);
 	else if (advancepFloor == 2)
 		untilTouch(pFloor2);
 	else if (advancepFloor == 3)
 		untilTouch(pFloor3);
  stopMotor(mainMotor);

}

//create variable to store current location
//create variable to store next location before moving to next location.
//move elevator based on last location and next location
//if last location = 1 and next location = 2, but getpFloor is 0
//then you should be at floor2, so attempt to move to floor 1
